{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","clockName","hasClock","document","addEventListener","action","preventDefault","ReactDOM","render","getElementById"],"mappings":"uLAOaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,OAZP,gCAeE,SAAmBC,GACjB,IAAQC,EAAST,KAAKU,MAAdD,KAEJD,EAAUC,OAASA,GAErBL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDA,MApBzD,kCAwBE,WACER,OAAOW,cAAcZ,KAAKD,WAzB9B,oBA4BE,WACE,IAAQU,EAAST,KAAKU,MAAdD,KACAZ,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAKS,cAAcC,OAAO,IAAK,YAzC1C,GAA2BO,aCH3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAGX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAW,UACXC,UAAU,GAHd,EAMEtB,aANF,yDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEiB,UAAWL,QAC1B,MAEHO,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAOC,iBAEP,EAAK7B,MAAMyB,UAAW,KAGxBC,SAASC,iBAAiB,SAAS,WACjC,EAAK3B,MAAMyB,UAAW,OApB5B,kCAyBE,WACET,cAAcZ,KAAKD,WA1BvB,oBA6BE,WACE,IAAQsB,EAAarB,KAAKJ,MAAlByB,SAER,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOZ,KAAMT,KAAKJ,MAAMwB,mBApC7C,GAAyBN,aCPzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,U","file":"static/js/main.1156ddcf.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.scss';\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends Component<Props> {\n  state = {\n    time: new Date(),\n  };\n\n  timerId: number | undefined;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.time.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name } = this.props;\n\n    if (prevProps.name !== name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId: number | undefined;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (action) => {\n      action.preventDefault();\n\n      this.state.hasClock = false;\n    });\n\n    document.addEventListener('click', () => {\n      this.state.hasClock = true;\n    });\n  }\n\n  // this code stops the timer\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}